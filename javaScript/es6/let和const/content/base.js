/* 
let 和 const 声明的变量，在声明之前使用会报错
 */
/* 
a;
let a = 10;
 */

/* 
在for循环中，声明循环体的部分是一个父作用域，循环体内是一个单独的子作用域
 */
/* 
for (let i = 0; i < 3; i++) {
  let i = "abc";
  console.log(i)
}
// 这会打印三次“abc”，不会报错，说明声明部分和循环体部分是两个作用域
 */



/* 
for循环声明区let和var的不同
声明区是父作用域，循环体是子作用域
使用var在声明区声明变量i，相当于声明了一个全局变量i，循环体中的函数的i在查找的时候，会向外找，最终在全局作用域中找到了，最终的值都是10；
使用let在声明区声明变量i，其实循环体循环了多少次，就相当于声明了多少次，每一次都互不干扰，执行函数的时候，会向外找，找到的都是每次声明的i，每次找到的都是之前记录下来的值
 */
/* 
let arr = [];
for (var i = 0; i < 10; i++) {
  arr[i] = function () {
    console.log(i);
  }
}
arr[1]();
arr[2]();
// 10
// 10

let arr1 = [];
for (let i = 0; i < 10; i++) {
  arr1[i] = function () {
    console.log(i);
  }
}

arr1[1]();
arr1[2]();
// 1
// 2
 */
